{"version":3,"sources":["components/shared/header.module.scss","components/shared/footer.module.scss","pages/store/ProductsGrid.module.scss","api/authStore.js","contexts/AuthContext.jsx","api/client.js","api/products.js","contexts/CartReducer.js","contexts/WarehousePicker.js","contexts/CartContext.js","components/icons/index.js","helpers/utils.js","pages/cart/CartItem.js","pages/cart/CartProducts.js","hooks/useApi.js","pages/cart/PrintProducts.js","pages/cart/index.js","pages/store/DataProvider.js","pages/store/PriceField.js","pages/store/ProductFilter.js","pages/store/EmptyProducts.js","pages/store/AddToCartField.js","contexts/ProductsContext.js","pages/store/ShowRecordField.js","pages/store/ProductsToolBar.js","pages/store/ProductList.js","components/UI/Forms/Form.jsx","components/UI/Forms/ErrorText.jsx","components/UI/Forms/FormField.jsx","components/UI/Forms/SubmitButton.jsx","pages/login/Login.js","serviceWorker.js","authProvider.js","api/auth.js","theme.js","App.js","index.js"],"names":["module","exports","AuthStore","localStorage","getItem","STORAGE_KEY","error","console","log","getToken","token","jwtDecode","CLIENT_ID","clientId","JSON","parse","stringClientId","stringify","setItem","removeItem","authContext","createContext","user","loadingUser","setUser","logOut","AuthContext","props","useState","setLoadingUser","setUserFromToken","a","getClientId","useEffect","window","onload","Provider","value","removeClientId","location","replace","children","apiClient","create","baseURL","addAsyncRequestTransform","request","authToken","headers","getProducts","page","size","query","id","clientData","key","post","checkout","payload","sumItems","cartItems","length","Storage","itemCount","reduce","total","product","quantity","price","toFixed","storage","initialState","CartReducer","state","action","type","find","item","push","filter","findIndex","useStyles","makeStyles","theme","container","formControl","width","WarehousePicker","handleChange","open","handleClose","handleSubmit","warehouse","classes","Dialog","disableBackdropClick","disableEscapeKeyDown","onClose","DialogTitle","DialogContent","FormControl","className","InputLabel","htmlFor","Select","native","onChange","input","Input","aria-label","DialogActions","Button","onClick","color","CartContext","CartContextProvider","useReducer","dispatch","setWarehouse","setPayload","setOpen","handleCheckout","contextValues","removeProduct","addProduct","increase","decrease","clearCart","event","target","trim","_payload","raw","WHOUSE","MinusCircleIcon","fill","viewBox","d","clipRule","fillRule","PlusCircleIcon","TrashIcon","formatNumber","number","parseFloat","Intl","NumberFormat","style","currency","format","CartItem","useContext","name","CartProducts","styles","p__container","map","useApi","apiFunc","setError","data","setData","loading","setLoading","response","ok","PrintProducts","products","invoice","contentRef","React","createRef","trigger","content","current","ref","caption","class","scope","ERPCODE_CODE","Cart","invoiceItems","setInvoiceItems","checkoutApi","checkoutProducts","client","CLIENTID","clientID","APPID","SERVICE","OBJECT","KEY","FORM","DATA","SALDOC","SERIES","TRDR","PAYMENT","ITELINES","idx","LINENUM","QTY1","PRICE","PRICER","SRVLINES","Show","title","description","SimpleShowLayout","to","dataProvider","getList","resource","params","pagination","perPage","q","getOne","Promise","resolve","getMany","getManyReference","update","updateMany","delete","deleteMany","PriceField","source","record","ProductFilter","Filter","TextInput","label","alwaysOn","defaultValue","EmptyProducts","useListContext","basePath","AddToCart","PRODUCTNAME_NAME","MTRL","currentItem","isInCart","height","borderRadius","ProductsContext","ProductsContextProvider","currentProductDetails","setCurrentProductDetails","handleSetCurrentProduct","Modal","aria-labelledby","aria-describedby","Card","overflowY","Typography","variant","Divider","EANCODE","MANUFACTURECODE","VAT","VATNAME","MTRUNIT1","MTRUNIT2","MTRUNIT3","MTRCATEGORY","MTRCATEGORY_1","COMMERCIAL_CATEGORY_NAME","MTRGROUP","PRICEW","ShowRecordField","ProductsToolBar","TopToolbar","ProductList","List","empty","filters","context","actions","Datagrid","hover","TextField","headerClassName","Form","initialValues","validationSchema","onSubmit","values","ErrorText","visible","fontSize","FormField","onBlur","helpText","otherProps","useFormikContext","setFieldValue","errors","touched","setFieldTouched","e","SubmitButton","disabled","loginSchema","Yup","username","email","required","password","Login","login","useLogin","history","useHistory","toast","warn","setClientId","minHeight","placeholder","Boolean","hostname","match","authProvider","credentials","then","checkError","checkAuth","reject","status","logout","getIdentity","getPermissions","createMuiTheme","merge","defaultTheme","palette","secondary","main","App","Admin","loginPage","Resource","list","show","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.9152100e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__3p7LH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"footer_footer__15JWM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"p__grid\":\"ProductsGrid_p__grid__y0eGP\",\"column-header\":\"ProductsGrid_column-header__3hwVn\"};","import jwtDecode from 'jwt-decode';\n\nexport default class AuthStore {\n    static STORAGE_KEY = 'userToken';\n    static CLIENT_ID = 'clientId';\n\n    static getToken() {\n        try {\n            return localStorage.getItem(AuthStore.STORAGE_KEY);\n        } catch (error) {\n            console.log('GetToken error', error);\n            return null;\n        }\n    }\n    static async decodeToken() {\n        let token = await AuthStore.getToken();\n        if (token) {\n            try {\n                return jwtDecode(token);\n            } catch (e) {\n                return null;\n            }\n        }\n    }\n\n    static async getClientId() {\n        try {\n            let clientId = await localStorage.getItem(AuthStore.CLIENT_ID);\n            if (!clientId) return null;\n            clientId = JSON.parse(clientId);\n            return clientId;\n        } catch (error) {\n            console.log('AuthStore: ', error);\n            return null;\n        }\n    }\n\n    static async setClientId(clientId) {\n        const stringClientId = JSON.stringify(clientId);\n        return localStorage.setItem(AuthStore.CLIENT_ID, stringClientId);\n    }\n\n    static setToken(token) {\n        localStorage.setItem(AuthStore.STORAGE_KEY, token);\n    }\n\n    static removeToken() {\n        localStorage.removeItem(AuthStore.CLIENT_ID);\n        localStorage.removeItem(AuthStore.STORAGE_KEY);\n    }\n    static removeClientId() {\n        localStorage.removeItem(AuthStore.CLIENT_ID);\n    }\n}\n","import React, { createContext, useState, useEffect } from 'react';\nimport AuthStore from '../api/authStore';\n\nexport const authContext = createContext({\n    user: null,\n    loadingUser:true,\n    setUser: () => {},\n    logOut: () => {},\n});\n\nfunction AuthContext(props) {\n    const [user, setUser] = useState(null);\n    const [loadingUser, setLoadingUser] = useState(true);\n\n    const setUserFromToken = async () => {\n        const user = await AuthStore.getClientId();\n        if (user) setUser(user);\n        setLoadingUser(false);\n    };\n    const logOut = () => {\n        AuthStore.removeClientId();\n        setUser(null);\n        window.location.replace('/login');\n    };\n\n    useEffect(() => {\n        window.onload = () => {\n            // console.log();\n            //Read localStorage\n            setUserFromToken();\n        };\n\n        return () => {};\n    }, []);\n    return (\n        <authContext.Provider\n            value={{\n                user,\n                loadingUser,\n                setUser,\n                logOut,\n            }}\n        >\n            {props.children}\n        </authContext.Provider>\n    );\n}\n\nexport default AuthContext;\n","import { create } from 'apisauce';\nimport AuthStore from './authStore';\n\nconst apiClient = create({\n    baseURL:\n        process.env.NODE_ENV === 'production' ? '' : 'http://localhost:5000',\n});\n\napiClient.addAsyncRequestTransform(async (request) => {\n    let authToken = await AuthStore.getToken();\n    // console.log(request);\n    if (!authToken) return;\n    request.headers['Authorization'] = 'Bearer ' + authToken;\n});\n\nexport default apiClient;\n","import AuthStore from './authStore';\nimport apiClient from './client';\n\nexport const getProducts = async (page = 1, size = 30, query = '', id) => {\n    const clientData = await AuthStore.getClientId();\n    if (id) clientData.key = id;\n    return apiClient.post(\n        `/products?size=${size}&page=${page}&q=${query}`,\n        clientData\n    );\n};\nexport const updateProduct = async (payload) => {\n    const clientData = await AuthStore.getClientId();\n    clientData.data = { ITEM: [payload] };\n    clientData.key = payload.MTRL;\n    return apiClient.post(`/products/update`, clientData);\n};\nexport const checkout = async (payload) => {\n    return apiClient.post(`/products/checkout`, payload);\n};\n","const Storage = (cartItems) => {\n    localStorage.setItem(\n        'cart',\n        JSON.stringify(cartItems.length > 0 ? cartItems : [])\n    );\n};\n\nexport const sumItems = (cartItems) => {\n    Storage(cartItems);\n    let itemCount = cartItems.reduce(\n        (total, product) => total + product.quantity,\n        0\n    );\n    let total = cartItems\n        .reduce((total, product) => total + product.price * product.quantity, 0)\n        .toFixed(2);\n    return { itemCount, total };\n};\n\nconst storage = localStorage.getItem('cart')\n    ? JSON.parse(localStorage.getItem('cart'))\n    : [];\nconst initialState = {\n    cartItems: storage,\n    ...sumItems(storage),\n    checkout: false,\n};\n\nexport const CartReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'ADD_ITEM':\n            if (\n                !state.cartItems.find((item) => item.id === action.payload.id)\n            ) {\n                state.cartItems.push({\n                    ...action.payload,\n                    quantity: 1,\n                });\n            }\n\n            return {\n                ...state,\n                ...sumItems(state.cartItems),\n                cartItems: [...state.cartItems],\n            };\n        case 'REMOVE_ITEM':\n            return {\n                ...state,\n                ...sumItems(\n                    state.cartItems.filter(\n                        (item) => item.id !== action.payload.id\n                    )\n                ),\n                cartItems: [\n                    ...state.cartItems.filter(\n                        (item) => item.id !== action.payload.id\n                    ),\n                ],\n            };\n        case 'INCREASE':\n            state.cartItems[\n                state.cartItems.findIndex(\n                    (item) => item.id === action.payload.id\n                )\n            ].quantity++;\n            return {\n                ...state,\n                ...sumItems(state.cartItems),\n                cartItems: [...state.cartItems],\n            };\n        case 'DECREASE':\n            state.cartItems[\n                state.cartItems.findIndex(\n                    (item) => item.id === action.payload.id\n                )\n            ].quantity--;\n            return {\n                ...state,\n                ...sumItems(state.cartItems),\n                cartItems: [...state.cartItems],\n            };\n        case 'CHECKOUT':\n            return {\n                cartItems: [],\n                checkout: true,\n                ...sumItems([]),\n            };\n        case 'CLEAR':\n            return {\n                cartItems: [],\n                ...sumItems([]),\n            };\n        default:\n            return state;\n    }\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n    container: {},\n    formControl: {\n        width: '100%',\n    },\n}));\n\nexport default function WarehousePicker({\n    handleChange,\n    open,\n    handleClose,\n    handleSubmit,\n    warehouse,\n}) {\n    const classes = useStyles();\n\n    return (\n        <div>\n            <Dialog\n                disableBackdropClick\n                disableEscapeKeyDown\n                open={open}\n                onClose={handleClose}\n            >\n                <DialogTitle>Select a warehouse</DialogTitle>\n                <DialogContent>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel htmlFor=\"demo-dialog-native\">\n                            Warehouse\n                        </InputLabel>\n                        <Select\n                            native\n                            value={warehouse}\n                            onChange={handleChange}\n                            input={<Input id=\"demo-dialog-native\" />}\n                        >\n                            <option aria-label=\"None\" value=\"\" />\n                            <option value={1000}>Main</option>\n                            <option value={2000}>Vitrina</option>\n                        </Select>\n                    </FormControl>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleSubmit} color=\"primary\">\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React, { createContext, useReducer, useState } from 'react';\nimport AuthStore from '../api/authStore';\nimport { checkout } from '../api/products';\nimport { CartReducer, sumItems } from './CartReducer';\nimport WarehousePicker from './WarehousePicker';\n\nexport const CartContext = createContext();\n\nconst storage = localStorage.getItem('cart')\n    ? JSON.parse(localStorage.getItem('cart'))\n    : [];\nconst initialState = {\n    cartItems: storage,\n    ...sumItems(storage),\n    checkout: false,\n};\n\nconst CartContextProvider = ({ children }) => {\n    const [state, dispatch] = useReducer(CartReducer, initialState);\n    const [warehouse, setWarehouse] = useState('');\n    const [payload, setPayload] = useState(null);\n    const [open, setOpen] = useState(false);\n\n    const increase = (payload) => {\n        dispatch({ type: 'INCREASE', payload });\n    };\n\n    const decrease = (payload) => {\n        dispatch({ type: 'DECREASE', payload });\n    };\n\n    const handleClose = () => {\n        setWarehouse('');\n        setPayload(null);\n        setOpen(false);\n    };\n\n    const addProduct = (payload) => {\n        setPayload(payload);\n        setOpen(true);\n    };\n    const addProductToCart = () => {\n        if (warehouse.trim().length === 0) return;\n        let _payload = payload;\n        _payload.raw.WHOUSE = warehouse;\n        // debugger;\n        dispatch({ type: 'ADD_ITEM', payload: _payload });\n        handleClose();\n    };\n\n    const removeProduct = (payload) => {\n        dispatch({ type: 'REMOVE_ITEM', payload });\n    };\n\n    const clearCart = () => {\n        dispatch({ type: 'CLEAR' });\n    };\n\n    const handleCheckout = async () => {\n        dispatch({ type: 'CHECKOUT' });\n    };\n\n    const contextValues = {\n        removeProduct,\n        addProduct,\n        increase,\n        decrease,\n        clearCart,\n        handleCheckout,\n        ...state,\n    };\n\n    return (\n        <CartContext.Provider value={contextValues}>\n            {children}\n            <WarehousePicker\n                handleChange={(event) => setWarehouse(event.target.value || '')}\n                open={open}\n                handleClose={handleClose}\n                handleSubmit={addProductToCart}\n                warehouse={warehouse}\n            />\n        </CartContext.Provider>\n    );\n};\n\nexport default CartContextProvider;\n","import React from 'react';\n\nexport const HomeIcon = ({width}) => <svg width={width}  fill=\"currentColor\" viewBox=\"0 0 20 20\"><path d=\"M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z\"></path></svg>\n\nexport const MinusCircleIcon = ({width}) => <svg width={width} fill=\"currentColor\" viewBox=\"0 0 20 20\"><path d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM7 9a1 1 0 000 2h6a1 1 0 100-2H7z\" clipRule=\"evenodd\" fillRule=\"evenodd\"></path></svg>\n\nexport const PlusCircleIcon = ({width}) => <svg width={width}  fill=\"currentColor\" viewBox=\"0 0 20 20\"><path d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-11a1 1 0 10-2 0v2H7a1 1 0 100 2h2v2a1 1 0 102 0v-2h2a1 1 0 100-2h-2V7z\" clipRule=\"evenodd\" fillRule=\"evenodd\"></path></svg>\n\nexport const CartIcon = ({width}) => <svg width={width}  fill=\"currentColor\" viewBox=\"0 0 20 20\"><path d=\"M3 1a1 1 0 000 2h1.22l.305 1.222a.997.997 0 00.01.042l1.358 5.43-.893.892C3.74 11.846 4.632 14 6.414 14H15a1 1 0 000-2H6.414l1-1H14a1 1 0 00.894-.553l3-6A1 1 0 0017 3H6.28l-.31-1.243A1 1 0 005 1H3zM16 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM6.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3z\"></path></svg>\n\nexport const TrashIcon = ({width}) => <svg width={width} fill=\"currentColor\" viewBox=\"0 0 20 20\"><path d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\" clipRule=\"evenodd\" fillRule=\"evenodd\"></path></svg>\n\nexport const GitHubIcon = ({width}) => <svg width={width} viewBox=\"0 0 16 16\" fill=\"currentColor\"><path fillRule=\"evenodd\" d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\"></path></svg>","export const formatNumber = (number) => {\n    number = parseFloat(number);\n    return new Intl.NumberFormat('el-GR', {\n        style: 'currency',\n        currency: 'EUR',\n    }).format(number);\n};\n","import React, { useContext } from 'react';\nimport { PlusCircleIcon, MinusCircleIcon, TrashIcon } from '../../components/icons'\nimport { CartContext } from '../../contexts/CartContext';\n\nimport { formatNumber } from '../../helpers/utils';\n\nconst CartItem = ({product}) => {\n\n    const { increase, decrease, removeProduct } = useContext(CartContext);\n\n    return ( \n        <div className=\"row no-gutters py-2\">\n            <div className=\"col-sm-2 p-2\">\n                {/* <img\n                alt={product.name}\n                style={{margin: \"0 auto\", maxHeight: \"50px\"}} \n                src={product.photo} className=\"img-fluid d-block\"/> */}\n            </div>\n            <div className=\"col-sm-4 p-2\">\n                <h5 className=\"mb-1\">{product.name}</h5>\n                <p className=\"mb-1\">Price: {formatNumber(product.price)} </p>\n                \n            </div>\n            <div className=\"col-sm-2 p-2 text-center \">\n                 <p className=\"mb-0\">Qty: {product.quantity}</p>\n            </div>\n            <div className=\"col-sm-4 p-2 text-right\">\n                 <button \n                 onClick={() => increase(product)}\n                 className=\"btn btn-primary btn-sm mr-2 mb-1\">\n                     <PlusCircleIcon width={\"20px\"}/>\n                 </button>\n\n                 {\n                     product.quantity > 1 &&\n                     <button\n                    onClick={() => decrease(product)}\n                    className=\"btn btn-danger btn-sm mb-1\">\n                        <MinusCircleIcon width={\"20px\"}/>\n                    </button>\n                 }\n\n                {\n                     product.quantity === 1 &&\n                     <button\n                    onClick={() => removeProduct(product)}\n                    className=\"btn btn-danger btn-sm mb-1\">\n                        <TrashIcon width={\"20px\"}/>\n                    </button>\n                 }\n                 \n            </div>\n        </div>\n     );\n}\n \nexport default CartItem;","import React, { useContext } from 'react';\nimport { CartContext } from '../../contexts/CartContext';\n\nimport CartItem from './CartItem';\nimport styles from './CartProducts.module.scss';\n\nconst CartProducts = () => {\n\n    const { cartItems } = useContext(CartContext);\n\n    return ( \n        <div className={styles.p__container}>\n            <div className=\"card card-body border-0\">\n\n                {\n                    cartItems.map(product =>  <CartItem key={product.id} product={product}/>)\n                }\n\n            </div>\n        </div>\n\n     );\n}\n \nexport default CartProducts;","import { useState } from 'react';\n\nexport const useApi = (apiFunc) => {\n    const [error, setError] = useState(false);\n    const [data, setData] = useState();\n    const [loading, setLoading] = useState(false);\n\n    const request = async (...args) => {\n        setLoading(true);\n        setError(false);\n        setData(null);\n        const response = await apiFunc(...args);\n        setLoading(false);\n        console.log('response', response);\n        if (!response.ok) {\n            setError(response.data);\n            return response;\n        }\n        setError(false);\n        setData(response.data);\n        return response;\n    };\n\n    return { error, loading, data, request };\n};\n","import React from 'react';\nimport { formatNumber } from '../../helpers/utils';\nimport ReactToPrint from 'react-to-print';\n\nconst PrintProducts = ({ products, invoice }) => {\n    const contentRef = React.createRef();\n\n    return (\n        <div>\n            <ReactToPrint\n                trigger={() => (\n                    <button className=\"btn btn-primary \">Print Invoice</button>\n                )}\n                content={() => contentRef.current}\n            />\n            <div ref={contentRef}>\n                <h2 className=\"text-center\">{invoice?.caption}</h2>\n                <table class=\"table table-bordered\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">ERP CODE</th>\n                            <th scope=\"col\">PRODUCT NAME</th>\n                            <th scope=\"col\">QUANTITY</th>\n                            {/* <th scope=\"col\">PRICE</th> */}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {products.map((product) => {\n                            return (\n                                <tr>\n                                    <th scope=\"row\">\n                                        {product.raw.ERPCODE_CODE}\n                                    </th>\n                                    <th scope=\"row\">{product.name}</th>\n                                    <th scope=\"row\">{product.quantity}</th>\n                                    {/* <th scope=\"row\">\n                                        {formatNumber(product.price)}\n                                    </th> */}\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n};\n\nexport default PrintProducts;\n","import React, { useContext, useEffect, useState } from 'react';\n\nimport CartProducts from './CartProducts';\nimport { CartContext } from '../../contexts/CartContext';\nimport { formatNumber } from '../../helpers/utils';\nimport { Link } from 'react-router-dom';\nimport { Show, SimpleShowLayout } from 'react-admin';\nimport AuthStore from '../../api/authStore';\nimport { checkout as checkoutApi } from '../../api/products';\nimport { useApi } from '../../hooks/useApi';\nimport PrintProducts from './PrintProducts';\n\nconst Cart = (props) => {\n    const [invoiceItems, setInvoiceItems] = useState([]);\n    const {\n        total,\n        cartItems,\n        itemCount,\n        clearCart,\n        checkout,\n        handleCheckout,\n    } = useContext(CartContext);\n\n    useEffect(() => {\n        if (!checkout) setInvoiceItems(cartItems);\n        return () => {};\n    }, [cartItems]);\n\n    const { request, loading, error, data: invoice } = useApi(checkoutApi);\n\n    const checkoutProducts = async () => {\n        const client = await AuthStore.getClientId();\n\n        const payload = {\n            CLIENTID: client.clientID,\n            APPID: 1001,\n            SERVICE: 'SetData',\n            OBJECT: 'SALDOC',\n            KEY: '',\n            FORM: '',\n            DATA: {\n                SALDOC: [\n                    {\n                        SERIES: '7001',\n                        TRDR: '11971',\n                        PAYMENT: '1003',\n                    },\n                ],\n\n                ITELINES: cartItems.map((item, idx) => {\n                    return {\n                        ...item.raw,\n                        LINENUM: 9000002 + idx,\n                        QTY1: item.quantity,\n                        PRICE: parseFloat(item.raw.PRICER),\n                    };\n                }),\n                SRVLINES: [],\n            },\n        };\n\n        await request(payload);\n        handleCheckout();\n    };\n\n    return (\n        <Show {...props} title=\"Cart\" description=\"This is the Cart page\">\n            <SimpleShowLayout>\n                <div className=\"text-center mt-5\">\n                    <h1>Cart</h1>\n                    <p>This is the Cart Page.</p>\n                </div>\n\n                <div className=\"row no-gutters justify-content-center\">\n                    {cartItems.length > 0 ? (\n                        <div className=\"col-sm-9 p-3\">\n                            <CartProducts />\n                        </div>\n                    ) : (\n                        <div className=\"p-3 text-center text-muted\">\n                            Your cart is empty\n                        </div>\n                    )}\n\n                    {checkout && (\n                        <div className=\"col-sm-12 p-3\">\n                            <PrintProducts\n                                products={invoiceItems}\n                                invoice={invoice}\n                            />\n                            <div className=\"p-3 text-center text-success\">\n                                <p>Checkout successful</p>\n                                <Link\n                                    to=\"/products\"\n                                    className=\"btn btn-outline-success btn-sm\"\n                                >\n                                    BUY MORE\n                                </Link>\n                            </div>\n                        </div>\n                    )}\n                    {cartItems.length > 0 && (\n                        <div className=\"col-sm-3 p-3\">\n                            <div className=\"card card-body\">\n                                <p className=\"mb-1\">Total Items</p>\n                                <h4 className=\" mb-3 txt-right\">{itemCount}</h4>\n                                <p className=\"mb-1\">Total Payment</p>\n                                <h3 className=\"m-0 txt-right\">\n                                    {formatNumber(total)}\n                                </h3>\n                                <hr className=\"my-4\" />\n                                <div className=\"text-center\">\n                                    <button\n                                        type=\"button\"\n                                        className=\"btn btn-primary mb-2\"\n                                        onClick={checkoutProducts}\n                                    >\n                                        {loading\n                                            ? 'Please wait...'\n                                            : 'CHECKOUT'}\n                                    </button>\n                                    <button\n                                        type=\"button\"\n                                        className=\"btn btn-outlineprimary btn-sm\"\n                                        onClick={clearCart}\n                                    >\n                                        CLEAR\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </SimpleShowLayout>\n        </Show>\n    );\n};\n\nexport default Cart;\n","import { getProducts, updateProduct } from '../../api/products';\n\nexport const dataProvider = {\n    getList: async (resource, params) => {\n        const { pagination, filter } = params;\n        const response = await getProducts(\n            pagination.page,\n            pagination.perPage,\n            filter.q\n        );\n        return response.data;\n    },\n    getOne: (resource, params) => Promise.resolve({ data: { id: 1 } }),\n    getMany: (resource, params) => Promise,\n    getManyReference: (resource, params) => Promise,\n    create: (resource, params) => Promise,\n    update: async (resource, params) => {\n        // const response = await updateProduct(params.data);\n\n        // console.log(response);\n        // return response.data;\n        return Promise.resolve();\n    },\n    updateMany: (resource, params) => Promise,\n    delete: (resource, params) => Promise,\n    deleteMany: (resource, params) => Promise,\n};\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatNumber } from '../../helpers/utils';\n\nconst PriceField = ({ source, record = {} }) => {\n    return <span>{formatNumber(record[source])}</span>;\n};\n\nPriceField.propTypes = {\n    label: PropTypes.string,\n    record: PropTypes.object,\n    source: PropTypes.string.isRequired,\n};\n\nexport default PriceField;\n","import React from 'react';\nimport { Filter, TextInput } from 'react-admin';\n\nconst ProductFilter = (props) => (\n    <Filter {...props}>\n        <TextInput label=\"Search\" source=\"q\" alwaysOn />\n        <TextInput\n            label=\"Title\"\n            source=\"PRODUCTNAME_NAME\"\n            defaultValue=\"Hello, World!\"\n        />\n    </Filter>\n);\n\nexport default ProductFilter;\n","import React from 'react';\nimport { CreateButton, List, useListContext } from 'react-admin';\n\nconst EmptyProducts = () => {\n    const { basePath, resource } = useListContext();\n    return (\n        <div className=\"card\">\n            <div className=\"card-body\">\n                <h4 className=\"text-center\">No products available</h4>\n            </div>\n        </div>\n    );\n};\n\nexport default EmptyProducts;\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { CartContext } from '../../contexts/CartContext';\n\nconst AddToCart = ({ source, record = {} }) => {\n    const product = {\n        name: record.PRODUCTNAME_NAME,\n        price: record.PRICER,\n        id: record.MTRL,\n        raw: record,\n    };\n\n    const { addProduct, cartItems, increase } = React.useContext(CartContext);\n\n    const currentItem = cartItems.find((item) => item.id == product.id);\n\n    const isInCart = (product) => {\n        return !!cartItems.find((item) => item.id === product.id);\n    };\n\n    return (\n        <div className=\"px-2\">\n            {isInCart(product) && (\n                <div onClick={() => increase(product)} className=\"btn  d-flex\">\n                    <i className=\"fa fa-cart-plus fa-2x mr-2\" />\n                    <span\n                        className=\"badge badge-danger justify-content-center align-items-center d-flex\"\n                        style={{ width: 30, height: 30, borderRadius: 15 }}\n                    >\n                        {currentItem?.quantity}\n                    </span>\n                </div>\n            )}\n\n            {!isInCart(product) && (\n                <div\n                    onClick={() => addProduct(product)}\n                    className=\"btn  d-flex\"\n                >\n                    <i className=\"fa fa-cart-plus fa-2x mr-2\" />\n                </div>\n            )}\n        </div>\n    );\n};\n\nAddToCart.propTypes = {\n    label: PropTypes.string,\n    record: PropTypes.object,\n    source: PropTypes.string.isRequired,\n};\n\nexport default AddToCart;\n","import { Button, Card, Divider, Modal, Typography } from '@material-ui/core';\nimport React, { createContext, useState } from 'react';\nexport const ProductsContext = createContext();\n\nconst ProductsContextProvider = ({ children }) => {\n    const [open, setOpen] = useState(false);\n    const [currentProductDetails, setCurrentProductDetails] = useState(null);\n\n    const handleSetCurrentProduct = (product) => {\n        setCurrentProductDetails(product);\n        setOpen(true);\n    };\n\n    return (\n        <ProductsContext.Provider\n            value={{\n                handleSetCurrentProduct,\n            }}\n        >\n            {children}\n            <Modal\n                open={open}\n                onClose={() => {\n                    setOpen(false);\n                    setCurrentProductDetails(null);\n                }}\n                className=\"p-5  justify-content-center d-flex\"\n                //   container={() => rootRef.current}\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n            >\n                <Card\n                    className=\"p-5\"\n                    style={{ width: '60%', overflowY: 'scroll' }}\n                >\n                    <div className=\"d-flex justify-content-between\">\n                        <Typography variant=\"h4\">\n                            Product details #{currentProductDetails?.MTRL}\n                        </Typography>\n                        <Button\n                            variant=\"contained\"\n                            color=\"default\"\n                            onClick={() => {\n                                setOpen(false);\n                                setCurrentProductDetails(false);\n                            }}\n                        >\n                            Close\n                        </Button>\n                    </div>\n                    <Divider />\n                    <div className=\"mt-4\">\n                        <h5>Product Name</h5>\n                        <p>{currentProductDetails?.PRODUCTNAME_NAME}</p>\n                        <h5>EAN CODE</h5>\n                        <p>{currentProductDetails?.EANCODE || 'N/A'}</p>\n                        <h5>MANUFACTURE CODE </h5>\n                        <p>{currentProductDetails?.MANUFACTURECODE || 'N/A'}</p>\n                        <h5>VALUE ADDED TAX</h5>\n                        <p>{currentProductDetails?.VAT || 'N/A'}</p>\n                        <h5>VATNAME</h5>\n                        <p>{currentProductDetails?.VATNAME || 'N/A'}</p>\n                        <h5>MTR UNIT 1</h5>\n                        <p>{currentProductDetails?.MTRUNIT1 || 'N/A'}</p>\n                        <h5>MTR UNIT 2</h5>\n                        <p>{currentProductDetails?.MTRUNIT2 || 'N/A'}</p>\n                        <h5>MTR UNIT3</h5>\n                        <p>{currentProductDetails?.MTRUNIT3 || 'N/A'}</p>\n                        <h5>MTR CATEGORY </h5>\n                        <p>{currentProductDetails?.MTRCATEGORY || 'N/A'}</p>\n                        <h5>MTR CATEGORY 1 </h5>\n                        <p>{currentProductDetails?.MTRCATEGORY_1 || 'N/A'}</p>\n                        <h5>COMMERCIAL CATEGORY NAME </h5>\n                        <p>\n                            {currentProductDetails?.COMMERCIAL_CATEGORY_NAME ||\n                                'N/A'}\n                        </p>\n                        <h5>MTR GROUP</h5>\n                        <p>{currentProductDetails?.MTRGROUP || 'N/A'}</p>\n                        <h5>PRICER</h5>\n                        <p>{currentProductDetails?.PRICER || 'N/A'}</p>\n                        <h5>PRICEW</h5>\n                        <p>{currentProductDetails?.PRICEW || 'N/A'}</p>\n                    </div>\n                </Card>\n            </Modal>\n        </ProductsContext.Provider>\n    );\n};\n\nexport default ProductsContextProvider;\n","import React, { useContext } from 'react';\nimport { ProductsContext } from '../../contexts/ProductsContext';\n\nconst ShowRecordField = ({ source, record = {} }) => {\n    const { handleSetCurrentProduct } = useContext(ProductsContext);\n    return (\n        <>\n            <div className=\"d-flex align-items-center\">\n                <i className=\"fa fa-eye fa-2x text-info\" />\n                <button\n                    onClick={() => handleSetCurrentProduct(record)}\n                    className=\" btn btn-link pl-2 text-info\"\n                >\n                    <span>Show</span>\n                </button>\n            </div>\n        </>\n    );\n};\n\nexport default ShowRecordField;\n","import React, { useContext } from 'react';\nimport { TopToolbar } from 'react-admin';\nimport { Link } from 'react-router-dom';\nimport { CartIcon } from '../../components/icons';\nimport { CartContext } from '../../contexts/CartContext';\n\nconst ProductsToolBar = (props) => {\n    const { itemCount } = useContext(CartContext);\n\n    return (\n        <TopToolbar {...props}>\n            <Link to=\"/cart/1/show\" className=\"\">\n                <h4>\n                    <i className=\"fa fa-shopping-cart\" /> Cart ({itemCount})\n                </h4>\n            </Link>\n        </TopToolbar>\n    );\n};\n\nexport default ProductsToolBar;\n","import * as React from 'react';\nimport { List, Datagrid, TextField, ShowButton, EditButton } from 'react-admin';\n\nimport './ProductsGrid.module.scss';\nimport ProductFilter from './ProductFilter';\nimport PriceField from './PriceField';\nimport EmptyProducts from './EmptyProducts';\nimport AddToCart from './AddToCartField';\nimport ShowRecordField from './ShowRecordField';\nimport ProductsToolBar from './ProductsToolBar';\n\nexport const ProductList = (props) => {\n    return (\n        <List\n            {...props}\n            title=\"KOlleris - store\"\n            empty={<EmptyProducts />}\n            filters={<ProductFilter context=\"form\" />}\n            actions={<ProductsToolBar />}\n        >\n            <Datagrid hover>\n                <TextField\n                    source=\"PRODUCTNAME_NAME\"\n                    label=\"PRODUCT NAME\"\n                    headerClassName=\"column-header \"\n                />\n\n                <TextField\n                    source=\"ERPCODE_CODE\"\n                    label=\"ERPCODE\"\n                    headerClassName=\"column-header \"\n                />\n                <TextField\n                    source=\"EANCODE\"\n                    label=\"EANCODE\"\n                    headerClassName=\"column-header \"\n                />\n                <TextField\n                    source=\"MANUFACTURECODE\"\n                    label=\"MANUFACTURE\"\n                    headerClassName=\"column-header \"\n                />\n\n                <TextField\n                    source=\"COMMERCIAL_CATEGORY_NAME\"\n                    label=\"COMMERCIAL CATEGORY NAME\"\n                    headerClassName=\"column-header \"\n                />\n\n                <PriceField\n                    source=\"PRICER\"\n                    label=\"PRICER\"\n                    headerClassName=\"column-header\"\n                />\n                <AddToCart source=\"ADD TO CART\" label=\"Cart\" />\n                {/* <ShowButton /> */}\n                {/* <EditButton /> */}\n                <ShowRecordField />\n            </Datagrid>\n        </List>\n    );\n};\n","import React from 'react';\r\nimport { Formik } from 'formik';\r\n\r\nconst Form= ({ initialValues, handleSubmit, validationSchema, children }) => {\r\n  return (\r\n    <div className=\"form\">\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={values => handleSubmit(values)}\r\n      >\r\n        {() => children}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from 'react';\r\n\r\nconst ErrorText = ({\r\n  error,\r\n  visible,\r\n}) => {\r\n  if (!visible) return null;\r\n  return (\r\n    <div>\r\n      <p style={{ fontSize: 12 }} className=\"text-danger mt-1\">\r\n        {error}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorText;\r\n","import React from 'react';\r\nimport { useFormikContext } from 'formik';\r\nimport ErrorText from './ErrorText';\r\n\r\nconst FormField = ({ name, onBlur, label,helpText, ...otherProps }) => {\r\n  const {\r\n    setFieldValue,\r\n    errors,\r\n    touched,\r\n    setFieldTouched,\r\n  } = useFormikContext()\r\n  return (\r\n    <div className=\"form-group\">\r\n      {label && <label className=\"form-group-label text-dark\">{label}</label>}\r\n      <input\r\n        className=\"form-control\"\r\n        {...otherProps}\r\n        onChange={(e) =>\r\n          setFieldValue(name, e.target.value)\r\n        }\r\n        onBlur={() => {\r\n          if (onBlur) onBlur();\r\n          setFieldTouched(name);\r\n        }}\r\n      />\r\n      { helpText &&\r\n      <p className=\"text-info\">{helpText}</p>\r\n       }\r\n      <ErrorText visible={touched[name]} error={errors[name]} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormField;\r\n","import React from 'react';\r\nimport { useFormikContext } from 'formik';\r\n\r\nconst SubmitButton = ({ loading, title = 'Save' }) => {\r\n  const { handleSubmit } = useFormikContext();\r\n  return (\r\n    <button\r\n      className=\"btn btn-danger\"\r\n      onClick={() => handleSubmit()}\r\n      type=\"button\"\r\n      disabled={loading}\r\n    >\r\n      {loading ? 'Loading...' : title}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default SubmitButton;\r\n","import React, { useContext } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Form from '../../components/UI/Forms/Form';\nimport FormField from '../../components/UI/Forms/FormField';\nimport * as Yup from 'yup';\nimport SubmitButton from '../../components/UI/Forms/SubmitButton';\nimport { useApi } from '../../hooks/useApi';\nimport { Link, useHistory } from 'react-router-dom';\nimport { authContext } from '../../contexts/AuthContext';\nimport { loginProducts } from '../../api/products';\nimport AuthStore from '../../api/authStore';\nimport { useLogin } from 'react-admin';\n\nconst loginSchema = Yup.object({\n    username: Yup.string().email().required().label('Email Address'),\n    password: Yup.string().required().label('Password'),\n});\n\nfunction Login() {\n    const login = useLogin();\n\n    const { loading, error, request } = useApi(login);\n    const history = useHistory();\n\n    const { setUser } = useContext(authContext);\n\n    const handleSubmit = async (values) => {\n        const response = await request(values);\n        if (!response.ok) toast.warn('Incorrect username or password');\n        if (response.ok) {\n            await AuthStore.setClientId(response.data);\n            setUser(response.data);\n            history.push('/');\n        }\n    };\n    return (\n        <div\n            className=\" row justify-content-center align-items-center mx-0\"\n            style={{ minHeight: ' 100vh', width: '100%' }}\n        >\n            <div className=\"col-md-6 col-lg-4 col-sm-12\">\n                <div className=\"card\">\n                    <div className=\"card-header\">\n                        <h3 className=\"card-title\">\n                            Kolleris |{' '}\n                            <small className=\"text-secondary\">Login</small>\n                        </h3>\n                    </div>\n                    <div className=\"card-body\">\n                        {error && <p className=\"text-danger\">{error}</p>}\n                        <Form\n                            initialValues={{ username: '', password: '' }}\n                            handleSubmit={handleSubmit}\n                            validationSchema={loginSchema}\n                        >\n                            <FormField\n                                name=\"username\"\n                                placeholder=\"Your email address\"\n                                label=\"Email\"\n                            />\n                            <FormField\n                                name=\"password\"\n                                placeholder=\"Your password\"\n                                label=\"Password\"\n                                type=\"password\"\n                            />\n                            <SubmitButton title=\"Login\" loading={loading} />\n                            <span className=\"ml-3\">\n                                {' '}\n                                <Link to=\"/signup\">Signup</Link> instead{' '}\n                            </span>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n            {/* <ToastContainer /> */}\n        </div>\n    );\n}\n\nexport default Login;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { AuthProvider } from 'react-admin';\nimport { login } from './api/auth';\nimport AuthStore from './api/authStore';\n\nexport const authProvider = {\n    // authentication\n    login: ({ username, password }) => {\n        console.log('credd', username, password);\n        return login({ email: username, password });\n    },\n    checkError: (error) => {\n        console.log('Auth error', error);\n    },\n    checkAuth: async () => {\n        return (await AuthStore.getClientId())\n            ? Promise.resolve()\n            : Promise.reject({ status: 401 });\n    },\n    logout: async () => {\n        await AuthStore.removeClientId();\n        return Promise.resolve('/login');\n    },\n    getIdentity: () => {\n        return AuthStore.getClientId();\n    },\n    // authorization\n    getPermissions: (params) => Promise.resolve(),\n};\n","import AuthStore from './authStore';\nimport apiClient from './client';\nimport jwtDecode from 'jwt-decode';\n\n// const ENDPOINT = 'auth/'\n\nexport const login = (credentials) =>\n    apiClient.post('/users/auth', credentials).then(async (response) => {\n        if (response.ok) {\n            await AuthStore.setClientId(response.data);\n        }\n        return response;\n    });\n","// In theme.js\nimport { defaultTheme } from 'react-admin';\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\nimport { merge } from 'lodash';\n\nexport const theme = createMuiTheme(\n    merge({}, defaultTheme, {\n        palette: {\n            // Your theme goes here\n            // Write the following code to have an orange app bar. We'll explain it later in this article.\n            secondary: {\n                main: '#353434', // Not far from orange\n            },\n        },\n    })\n);\n","import React from 'react';\nimport { Admin, Resource } from 'react-admin';\nimport { authProvider } from './authProvider';\nimport Cart from './pages/cart/index';\nimport Login from './pages/login/Login';\n\nimport { dataProvider } from './pages/store/DataProvider';\nimport ProductEdit from './pages/store/EditProduct';\nimport ProductDetails from './pages/store/ProductDetails';\nimport { ProductList } from './pages/store/ProductList';\nimport { theme } from './theme';\n\nconst App = () => {\n    return (\n        <Admin\n            authProvider={authProvider}\n            loginPage={Login}\n            dataProvider={dataProvider}\n            theme={theme}\n        >\n            <Resource\n                name=\"products\"\n                list={ProductList}\n                // show={ProductDetails}\n                // edit={ProductEdit}\n            />\n            <Resource name=\"cart\" show={Cart} />\n        </Admin>\n    );\n};\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Routes from './routes';\nimport * as serviceWorker from './serviceWorker';\n\nimport './App.css';\nimport { HelmetProvider } from 'react-helmet-async';\nimport AuthContext from './contexts/AuthContext';\nimport App from './App';\nimport CartContextProvider from './contexts/CartContext';\nimport ProductsContextProvider from './contexts/ProductsContext';\n\nimport { ToastContainer } from 'react-toastify';\n\nReactDOM.render(\n    <AuthContext>\n        <HelmetProvider>\n            <ProductsContextProvider>\n                <CartContextProvider>\n                    <App />\n                </CartContextProvider>\n            </ProductsContextProvider>\n            <ToastContainer />\n        </HelmetProvider>\n    </AuthContext>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}